[
  {
    "id": "bug_001",
    "file_path": "example_1.py",
    "buggy_code": "def add(a, b):\n    return a - b  # wrong operator",
    "symptom": "Test 'test_addition' fails",
    "stack_trace": "AssertionError: Expected 5 but got -1",
    "fixed_code": "def add(a, b):\n    return a + b"
  },
  {
    "id": "bug_002",
    "file_path": "example_2.py",
    "buggy_code": "for i in range(10):\n    print(i)\n  return i",
    "symptom": "SyntaxError: unexpected indent",
    "stack_trace": "File 'example_2.py', line 3",
    "fixed_code": "for i in range(10):\n    print(i)\nreturn i"
  },
  {
    "id": "bug_003",
    "file_path": "example_3.py",
    "buggy_code": "def divide(a, b):\n    return a / b",
    "symptom": "ZeroDivisionError when dividing by zero",
    "stack_trace": "ZeroDivisionError: division by zero",
    "fixed_code": "def divide(a, b):\n    return a / b if b != 0 else None"
  },
  {
    "id": "bug_004",
    "file_path": "example_4.py",
    "buggy_code": "def foo():\n    print('Start')\n      print('End')",
    "symptom": "IndentationError",
    "stack_trace": "IndentationError: unexpected indent",
    "fixed_code": "def foo():\n    print('Start')\n    print('End')"
  },
  {
    "id": "bug_005",
    "file_path": "example_5.py",
    "buggy_code": "my_list = None\nmy_list.append(1)",
    "symptom": "AttributeError in object",
    "stack_trace": "AttributeError: 'NoneType' object has no attribute 'append'",
    "fixed_code": "my_list = []\nmy_list.append(1)"
  },
  {
    "id": "bug_006",
    "file_path": "example_6.py",
    "buggy_code": "print(data['name'])",
    "symptom": "KeyError in dictionary access",
    "stack_trace": "KeyError: 'name'",
    "fixed_code": "print(data.get('name', 'Unknown'))"
  },
  {
    "id": "bug_007",
    "file_path": "example_7.py",
    "buggy_code": "def foo():\n    print('Start')\n      print('End')",
    "symptom": "IndentationError",
    "stack_trace": "IndentationError: unexpected indent",
    "fixed_code": "def foo():\n    print('Start')\n    print('End')"
  },
  {
    "id": "bug_008",
    "file_path": "example_8.py",
    "buggy_code": "my_list = None\nmy_list.append(1)",
    "symptom": "AttributeError in object",
    "stack_trace": "AttributeError: 'NoneType' object has no attribute 'append'",
    "fixed_code": "my_list = []\nmy_list.append(1)"
  },
  {
    "id": "bug_009",
    "file_path": "example_9.py",
    "buggy_code": "my_list = None\nmy_list.append(1)",
    "symptom": "AttributeError in object",
    "stack_trace": "AttributeError: 'NoneType' object has no attribute 'append'",
    "fixed_code": "my_list = []\nmy_list.append(1)"
  },
  {
    "id": "bug_010",
    "file_path": "example_10.py",
    "buggy_code": "print(data['name'])",
    "symptom": "KeyError in dictionary access",
    "stack_trace": "KeyError: 'name'",
    "fixed_code": "print(data.get('name', 'Unknown'))"
  },
  {
    "id": "bug_011",
    "file_path": "example_11.py",
    "buggy_code": "def foo():\n    print('Start')\n      print('End')",
    "symptom": "IndentationError",
    "stack_trace": "IndentationError: unexpected indent",
    "fixed_code": "def foo():\n    print('Start')\n    print('End')"
  },
  {
    "id": "bug_012",
    "file_path": "example_12.py",
    "buggy_code": "def foo():\n    print('Start')\n      print('End')",
    "symptom": "IndentationError",
    "stack_trace": "IndentationError: unexpected indent",
    "fixed_code": "def foo():\n    print('Start')\n    print('End')"
  },
  {
    "id": "bug_013",
    "file_path": "example_13.py",
    "buggy_code": "def foo():\n    print('Start')\n      print('End')",
    "symptom": "IndentationError",
    "stack_trace": "IndentationError: unexpected indent",
    "fixed_code": "def foo():\n    print('Start')\n    print('End')"
  },
  {
    "id": "bug_014",
    "file_path": "example_14.py",
    "buggy_code": "total = 0\nfor item in items:\n    total += item",
    "symptom": "TypeError: unsupported operand",
    "stack_trace": "TypeError: unsupported operand type(s) for +: 'int' and 'str'",
    "fixed_code": "total = 0\nfor item in items:\n    total += int(item)"
  },
  {
    "id": "bug_015",
    "file_path": "example_15.py",
    "buggy_code": "total = 0\nfor item in items:\n    total += item",
    "symptom": "TypeError: unsupported operand",
    "stack_trace": "TypeError: unsupported operand type(s) for +: 'int' and 'str'",
    "fixed_code": "total = 0\nfor item in items:\n    total += int(item)"
  },
  {
    "id": "bug_016",
    "file_path": "example_16.py",
    "buggy_code": "print(data['name'])",
    "symptom": "KeyError in dictionary access",
    "stack_trace": "KeyError: 'name'",
    "fixed_code": "print(data.get('name', 'Unknown'))"
  },
  {
    "id": "bug_017",
    "file_path": "example_17.py",
    "buggy_code": "my_list = None\nmy_list.append(1)",
    "symptom": "AttributeError in object",
    "stack_trace": "AttributeError: 'NoneType' object has no attribute 'append'",
    "fixed_code": "my_list = []\nmy_list.append(1)"
  },
  {
    "id": "bug_018",
    "file_path": "example_18.py",
    "buggy_code": "print(data['name'])",
    "symptom": "KeyError in dictionary access",
    "stack_trace": "KeyError: 'name'",
    "fixed_code": "print(data.get('name', 'Unknown'))"
  },
  {
    "id": "bug_019",
    "file_path": "example_19.py",
    "buggy_code": "print(data['name'])",
    "symptom": "KeyError in dictionary access",
    "stack_trace": "KeyError: 'name'",
    "fixed_code": "print(data.get('name', 'Unknown'))"
  },
  {
    "id": "bug_020",
    "file_path": "example_20.py",
    "buggy_code": "def foo():\n    print('Start')\n      print('End')",
    "symptom": "IndentationError",
    "stack_trace": "IndentationError: unexpected indent",
    "fixed_code": "def foo():\n    print('Start')\n    print('End')"
  },
  {
    "id": "bug_021",
    "file_path": "example_21.py",
    "buggy_code": "my_list = None\nmy_list.append(1)",
    "symptom": "AttributeError in object",
    "stack_trace": "AttributeError: 'NoneType' object has no attribute 'append'",
    "fixed_code": "my_list = []\nmy_list.append(1)"
  },
  {
    "id": "bug_022",
    "file_path": "example_22.py",
    "buggy_code": "print(data['name'])",
    "symptom": "KeyError in dictionary access",
    "stack_trace": "KeyError: 'name'",
    "fixed_code": "print(data.get('name', 'Unknown'))"
  },
  {
    "id": "bug_023",
    "file_path": "example_23.py",
    "buggy_code": "for i in range(len(my_list)):\n    print(my_list[i+1])",
    "symptom": "IndexError in loop",
    "stack_trace": "IndexError: list index out of range",
    "fixed_code": "for i in range(len(my_list)-1):\n    print(my_list[i+1])"
  }
]